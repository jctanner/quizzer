{
  "answer": "120\nor\n5!",
  "choices": [],
  "correct_choice_index": null,
  "enabled": true,
  "explanation": "<div aria-atomic=\"true\" class=\"zb-explanation has-explanation forfeit\" role=\"alert\">\n <p class=\"message\">\n  Answers\n </p>\n <div class=\"answers\">\n  <!-- -->\n  <span class=\"forfeit-answer\">\n   120\n  </span>\n  <span class=\"or-text\">\n   or\n  </span>\n  <span class=\"forfeit-answer\">\n   5!\n  </span>\n </div>\n There are 5! ways to order five elements in a subset. Therefore, the function mapping 5-permutations to 5-subsets\n is k-to-1 for\n <span style=\"white-space: nowrap;\">\n  k = 5! = 120\n </span>\n .\n</div>\n",
  "images": {
    "choices": [],
    "explanation": "4.8.4-activity-explanation_div.png",
    "instructions": "4.8.4-activity-instructions_div.png",
    "question": "4.8.4.0-activity-question.png"
  },
  "input_type": "input",
  "instructions": "<div class=\"activity-instructions\">\n</div>\n",
  "qid": 0,
  "question": "<div>\n <div class=\"text\">\n  Consider  a function that maps 5-permutations from a set\n  <span style=\"white-space: nowrap;\">\n   S = {1, 2, ..., 20}\n  </span>\n  to 5-subsets from S. The function takes a 5-permutation and removes the ordering on the elements. How many 5-permutations map on to the subset\n  <span style=\"white-space: nowrap;\">\n   {2, 5, 13, 14, 19}\n  </span>\n  ?\n </div>\n</div>",
  "section": "4.8.4: Mapping r-permutations to r-subsets."
}