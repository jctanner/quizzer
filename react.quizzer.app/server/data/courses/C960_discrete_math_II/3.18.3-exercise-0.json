{
  "answer": "1x\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Add y to S\nEnd-for\nReturn( S )",
  "choices": [],
  "correct_choice_index": null,
  "enabled": true,
  "explanation": null,
  "images": {
    "choices": [],
    "instructions": "3.18.3-exercise-instructions_div.png",
    "question": "3.18.3.0-exercise-question.png"
  },
  "input_type": null,
  "instructions": "<div class=\"setup\">\n <!-- -->\n</div>\n",
  "qid": 0,
  "question": "<div class=\"question\">\n <span class=\"part\">\n  (a)\n </span>\n <div class=\"text\">\n  <p>\n   Give a recursive algorithm that takes as input a non-negative\ninteger n and returns a set containing all binary strings of length n.\nHere are the operations on strings and sets you can use:\n  </p>\n  <ul>\n   <li>\n    Initialize an empty set S.\n   </li>\n   <li>\n    Add a string x to S.\n   </li>\n   <li>\n    y := 0x.\u00a0\u00a0This operation adds a 0 to the beginning of string x and\nassigns the result to string y.\n   </li>\n   <li>\n    y := 1x.\u00a0\u00a0\nThis operation adds a 1 to the beginning of string x and\nassigns the result to string y.\n   </li>\n   <li>\n    return(S)\n   </li>\n   <li>\n    <p>\n     A looping structure that performs an operation on every string in a set S:\n    </p>\n    <ul>\n     for every x in S,\n     <ul>\n      // perform some sequence of steps with string x.\n     </ul>\n    </ul>\n   </li>\n  </ul>\n </div>\n</div>\n",
  "section": "Exercise 3.18.3: Recursively computing the set of all binary strings of a fixed length."
}