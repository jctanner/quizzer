{"section": "Exercise 3.18.3: Recursively computing the set of all binary strings of a fixed length.", "qid": 0, "instructions": null, "question": "<div class=\"question\">\n <div class=\"setup flex-row\">\n  <div class=\"label\">\n   2)\n  </div>\n  <div class=\"text\">\n   <img alt=\"Tree contains three level. At the top is the root vertex. The root vertex contains two edges, each of which point to a vertex. Each of these vertices similarly contain two edges, each of which point to a vertex.\" class=\"zyimage centered-image\" height=\"undefined\" src=\"https://zytools.zybooks.com/zyAuthor/WGU_C960_DiscreteMath2/6/IMAGES/embedded_image_1_9e33c84c-44b0-74ab-6a29-c6a0c9c9b350_YmgIVPav6AriLXTSELiG.png\" title=\"\" width=\"200\"/>\n  </div>\n </div>\n <div class=\"question-container flex-row\">\n  <div class=\"input\">\n   <pre><!----><textarea class=\"zb-text-area hide-scrollbar ember-text-area ember-view\" cols=\"20\" id=\"ember94\" rows=\"1\" spellcheck=\"false\"></textarea><!----></pre>\n   <div class=\"buttons flex-row\">\n    <button class=\"check-button zb-button primary raised ember-view\" id=\"ember95\">\n     <!-- -->\n     <span class=\"title\">\n      Check\n     </span>\n    </button>\n    <button class=\"show-answer-button zb-button secondary ember-view\" id=\"ember96\" style=\"\">\n     <!-- -->\n     <span class=\"title\">\n      Show answer\n     </span>\n    </button>\n   </div>\n  </div>\n </div>\n</div>\n", "choices": [], "answer": "<div class=\"answer\">\n <div style=\"float: left;\">\n  <div class=\"zyblock\">\n   StringSet(n)\n   <br/>\n   <br/>\n   Input: A non-negative integer n.\n   <br/>\n   Output: A set containing all binary strings of length n.\n   <br/>\n   <br/>\n   S := \u2205\n   <br/>\n   <br/>\n   If (n = 0)\n   <br/>\n   Add \u03bb to S\n   <br/>\n   Return( S )\n   <br/>\n   End-if\n   <br/>\n   <br/>\n   T := StringSet(n - 1)  // The recursive call\n   <br/>\n   <br/>\n   For every x \u2208 T\n   <br/>\n   y := 0x\n   <br/>\n   Add y to S\n   <br/>\n   y := 1x\n   <br/>\n   Add y to S\n   <br/>\n   End-for\n   <br/>\n   <br/>\n   Return( S )\n  </div>\n </div>\n <div style=\"display: block; height: 0px; clear: both;\">\n </div>\n</div>\n", "explanation": null}